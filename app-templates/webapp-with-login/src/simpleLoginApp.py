import hashlib
import os
import random

# Interface for the database actions necessary for this login app template.
class LoginDatabaseManager():
    def __init__(self, dbfile):
        self.dbfile = dbfile

    def create_users_table(self):
        pass

    def add_user(self, uname, hpasswd, salt, personal): 
        pass

    # Return a tuple of values (hpasswd, salt, personal), or None.
    def get_user(self, uname):
        pass

class SimpleLoginApp():
    def __init__(self, dbman):
        self.dbman = dbman

    def random_salt(self):
        return os.urandom(32)

    # Add a new user with given username, password and personal info.
    def add_user(self, uname, passwd, personal):
        salt = self.random_salt()
        hpasswd = hashlib.pbkdf2_hmac('sha256', passwd.encode('utf-8'), salt, 20)
        self.dbman.add_user(uname, hpasswd.hex(), salt.hex(), personal)

    # Return (True, personal) or (False, '') depending on whether login is valid.
    def is_login(self, uname, passwd):
        user_row = self.dbman.get_user(uname)
        if user_row == None:
            return (False, '')
        salt = bytes.fromhex(user_row[1])
        hpasswd = bytes.fromhex(user_row[0])
        hguess = hashlib.pbkdf2_hmac('sha256', passwd.encode('utf-8'), salt, 20)
        correct = (hpasswd == hguess)
        if correct:
            return (True, user_row[2])
        return (False, '')

SelectedLoginApp = SimpleLoginApp
