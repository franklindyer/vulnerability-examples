from flask import Flask, render_template, request, make_response, send_from_directory, url_for
import sqlite3
import wikipedia
import sys

from base import *;

def get_db_connection():
    conn = sqlite3.connect('accounts.db')
    conn.row_factory = sqlite3.Row
    return conn

app = Flask(__name__)

@app.route('/css/<path:path>')
def send_css(path):
    return send_from_directory('css', path)

@app.route('/')
def index():
    cur = get_db_connection()
    total_money = cur.execute("SELECT SUM(balance) FROM users;").fetchone()[0]
    total_users = cur.execute("SELECT COUNT(*) FROM users;").fetchone()[0]
    return render_template("index.html", total_money=total_money, total_users=total_users)

@app.route('/login', methods=['POST'])
def login_page():
    cur = get_db_connection()
    user = request.form["username"]
    passwd = request.form["password"]

    query = "SELECT id FROM users WHERE username=? AND password=?;"
    res = cur.execute(query, (user, passwd,))
    match = res.fetchone()

    if match == None:
        return "Invalid credentials."
    else:
        uid = match[0]
        sesskey = random_session_key()
        cur.execute("UPDATE users SET session_key=? WHERE id=?;", (sesskey, uid,))
        cur.commit()
        resp = make_response(render_template("login_success.html"))
        resp.set_cookie('session_key', sesskey)
        return resp

@app.route('/logout')
def logout():
    resp = make_response("You are now logged out!")
    resp.set_cookie('session_key', '')
    return resp

@app.route('/home')
def home_page():
    cur = get_db_connection()
    sesskey = request.cookies.get('session_key')
    res = cur.execute("SELECT id, username, balance FROM users WHERE session_key=?;", (sesskey,))
    match = res.fetchone()
    if match == None:
        return "You are not logged in."
    else:
        uid = match[0]
        user_list = cur.execute("SELECT id, username FROM users;").fetchall()
        pay_history = cur.execute("SELECT * FROM transactions WHERE sender=? OR receiver=? DESC;", (uid, uid,))
        return render_template("home.html", user=match, user_list=user_list, pay_history=pay_history)

@app.route('/pay', methods=['POST'])
def pay_form():
    cur = get_db_connection()
    rid = int(request.form["recipient"])
    amt = 0
    try:
        amt = float(request.form["amount"])
    except ValueError:
        return "Invalid dollar amount."
    reason = request.form["reason"]

    if not validate_user(rid, cur):
        return "Invalid recipient."

    sesskey = request.cookies.get('session_key')
    res = cur.execute("SELECT id, username, balance FROM users WHERE session_key=?;",(sesskey,))
    sid = res.fetchone()
    if sid == None:
        return "You are not logged in."
    sid = int(sid[0])

    if execute_transaction(sid, rid, amt, reason, cur):
        return "Transaction complete!"
    else:
        return "Your balance is insufficient."

app.run(host='0.0.0.0')
