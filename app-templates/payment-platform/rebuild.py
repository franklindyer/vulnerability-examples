import sqlite3
import random
import string
import os

# from payment import *
from payment_secure import *

def random_password():
    return ''.join(random.choice(string.ascii_lowercase) for i in range(20))

try:
    os.remove("accounts.db")
except OSError:
    pass

con = sqlite3.connect("accounts.db")
cur = con.cursor()

cur.execute("CREATE TABLE users (id INTEGER PRIMARY KEY AUTOINCREMENT, username TEXT NOT NULL, password TEXT NOT NULL, balance INTEGER, session_key TEXT);")
cur.execute("CREATE TABLE transactions (sender INTEGER NOT NULL, receiver INTEGER NOT NULL, amount INTEGER NOT NULL, reason TEXT, timestamp DATETIME DEFAULT CURRENT_TIMESTAMP);")

names = ["alfonso", "beatriz", "carmen", "dani", "enrique", "fulano"]
for i in range(6):
    user = names[i] + str(random.randint(1000,9999))
    passwd = random_password()
    balance = random.randint(50*20,1000*20)
    cur.execute("INSERT INTO users (username, password, balance) VALUES (?, ?, ?);", (user, passwd, balance))
    if i < 3:
        print(f"You can use the account {user} with password {passwd}.")

## Add some random example transactions
comments = ""
with open("message_examples.txt", 'r') as f:
        comments = f.read().splitlines()
        chosen_comments = random.choices(comments, k=20)
for i in range(20):
    sid = random.randint(1, 6)
    rid = random.randint(1, 5)
    if rid >= sid:
        rid += 1
    sbalance = cur.execute("SELECT balance FROM users WHERE id=?;", (sid,)).fetchone()[0]
    rbalance = cur.execute("SELECT balance FROM users WHERE id=?;", (rid,)).fetchone()[0]
    amt = random.randint(0, int(sbalance/10)) 
    cur.execute("INSERT INTO transactions (sender, receiver, amount, reason) VALUES (?,?,?,?);", (sid,rid,amt,chosen_comments[i],))
    cur.execute("UPDATE users SET balance=? WHERE id=?;", (sbalance-amt,sid))
    cur.execute("UPDATE users SET balance=? WHERE id=?;", (rbalance+amt,rid))

con.commit()
con.close()
